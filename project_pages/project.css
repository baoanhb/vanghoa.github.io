@font-face {
	font-family: BaoAnhVjpPro;
	src: url(3/BaoAnhVjpPro-Regular.otf);
}

* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
	font-size: 15px;
	word-spacing: 0.5em;
	font-family: Arial, Helvetica, sans-serif;
	color: white;
	-webkit-text-size-adjust: none;
	text-size-adjust: none;
}

:root {
	--minsz: calc(100vw - calc(var(--gapsz) * 2));
	--maxsz: 1600px;
	--minsz169: calc(100vw - calc(var(--gapsz) * 2));
	--gapsz: 150px;
}

body {
	width: 100%;
	padding: calc(var(--gapsz) / 3) var(--gapsz) 0 var(--gapsz);
	text-align: center;
}

.wrapper {
	width: 100vw;
}

img, .item, .column, p {
	margin: calc(var(--gapsz) / 3) auto;
	display: block;
	width: var(--minsz169);
	max-width: var(--maxsz);
	height: auto;
	object-fit: contain;
	text-align: justify;
}

p {
	max-width: 700px;
} 

p::after{
	content: "";
	display: inline-block;
	width: 100%;
}

h1 {
	font-size: 2rem;
	font-family: 'Times New Roman', Times, serif;
}

.sqr {
	width: var(--minsz);
	height: var(--minsz);
	max-height: var(--maxsz);
}

.s169 {
	height: calc(calc(var(--minsz169) / 16) * 9);
	max-height: calc(calc(var(--maxsz) / 16) * 9);
}

.twocol, .threecol {
	display: grid;
	gap: calc(var(--gapsz) / 3);
}

.twocol {
	grid-template-columns: 1fr 1fr;
}

.threecol {
	grid-template-columns: 1fr 1fr 1fr;
}

.colchild {
	width: 100%;
	margin: 0;
}

.fonttest {
	font-family: BaoAnhVjpPro; 
	text-align: left; 
	word-break: break-all; 
	font-size: 4vmax;
}

@media screen and (max-width: 800px) {
	:root {
		--gapsz: 80px;
	}

	.threecol {
		grid-template-columns: 1fr 1fr;
	}
}

@media screen and (max-width: 500px) {
	:root {
		--gapsz: 18px;
	}
}

@media screen and (max-width: 500px) and (orientation:portrait) {
	img, .item, .column, p {
		margin: calc(var(--gapsz) * 2) auto;
	}

	body {
		padding-top: calc(var(--gapsz) * 2);
	}
}

@media screen and (max-height: 500px), (max-width: 500px) {
	* {
		font-size: 12px;
	}

	h1 {
		font-size: 1.5rem;
	}
}

/* orientation */
@media screen and (orientation:landscape) {
	:root {
		--minsz: calc(100vh - calc(var(--gapsz) / 3));
	}
}

@media screen and (orientation:portrait) {
	:root {
		--minsz: calc(100vw - calc(var(--gapsz) * 2));
	}
}